version: "3.9"

services:
  django:
    build: .
    container_name: koreanparts
    command: >
      sh -c "python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             gunicorn --bind 0.0.0.0:8000 koreanparts.wsgi:application"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    ports:
      - "8000:8000"
    depends_on:
      - db
      - minio
      - createbucket
    env_file:
      - .env

  db:
    image: postgres
    container_name: korean_parts
    restart: always
    environment:
      POSTGRES_DB: koreanparts_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: qwerty_123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  nginx:
    image: nginx:latest
    volumes:
      - static_volume:/app/staticfiles
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - django
    ports:
      - "80:80"

  minio:
    image: minio/minio
    command: server --console-address ":9001" /data
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"

  createbucket:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
        sleep 5;
        mc alias set myminio http://minio:9000 ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD};
        mc mb myminio/${MINIO_BUCKET_NAME} || echo 'Bucket already exists';
        mc policy set public myminio/${MINIO_BUCKET_NAME};
      "
    env_file:
      - .env

volumes:
  static_volume:
  minio_data:
  postgres_data:
